Script started on 2018-11-29 18:29:35+0530
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# ssh kunald@monitor2.blueapple.mobi
kunald@monitor2.blueapple.mobi's password: 
Last login: Thu Nov 29 12:15:23 2018 from 192.168.252.176
]0;kunald@monitor2:~[?1034h[kunald@monitor2 ~]$ pwd
/home/kunald
]0;kunald@monitor2:~[kunald@monitor2 ~]$ logout
Connection to monitor2.blueapple.mobi closed.
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# autoexpect typescript 
autoexpect started, file is script.exp
couldn't execute "typescript": no such file or directory
    while executing
"spawn -noecho typescript"
    ("eval" body line 1)
    invoked from within
"eval spawn -noecho $argv"
    invoked from within
"if {[llength $argv]>0} {
	eval spawn -noecho $argv
	cmd "spawn $argv"
} else {
	spawn -noecho $env(SHELL)
	cmd "spawn \$env(SHELL)"
}"
    (file "/usr/bin/autoexpect" line 319)
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# ls
'='   11   [0m[01;32manswerbot[0m    [01;32manswerbotif[0m    [01;32mautologin.sh_bkp[0m   [01;32mquestionsif.sh[0m   typescript
 10   25   [01;32manswerbot1[0m   [01;32mautologin.sh[0m   [01;32mquestions[0m          [01;32mscript.exp[0m
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# cat se[Kcript.exp '
> ^C
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# cat script.exp '[K
#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Thu Nov 29 18:31:12 2018
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# cat typescript 
Script started on 2018-11-29 18:29:35+0530
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# ssh kunald@monitor2.blueapple.mobi
kunald@monitor2.blueapple.mobi's password: 
Last login: Thu Nov 29 12:15:23 2018 from 192.168.252.176
]0;kunald@monitor2:~[?1034h[kunald@monitor2 ~]$ pwd
/home/kunald
]0;kunald@monitor2:~[kunald@monitor2 ~]$ logout
Connection to monitor2.blueapple.mobi closed.
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# autoexpect typescript 
autoexpect started, file is script.exp
couldn't execute "typescript": no such file or directory
    while executing
"spawn -noecho typescript"
    ("eval" body line 1)
    invoked from within
"eval spawn -noecho $argv"
    invoked from within
"if {[llength $argv]>0} {
	eval spawn -noecho $argv
	cmd "spawn $argv"
} else {
	spawn -noecho $env(SHELL)
	cmd "spawn \$env(SHELL)"
}"
    (file "/usr/bin/autoexpect" line 319)
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# ls
'='   11   [0m[01;32manswerbot[0m    [01;32manswerbotif[0m    [01;32mautologin.sh_bkp[0m   [01;32mquestionsif.sh[0m   typescript
 10   25   [01;32manswerbot1[0m   [01;32mautologin.sh[0m   [01;32mquestions[0m          [01;32mscript.exp[0m
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# cat se[Kcript.exp '
> ^C
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# cat script.exp '[K
#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Thu Nov 29 18:31:12 2018
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5:/home/kunal/exceptscript# 
]0;root@kunal-HP-ProBook-430-G5: /home/kunal/exceptscriptroot@kunal-HP-ProBook-430-G5: